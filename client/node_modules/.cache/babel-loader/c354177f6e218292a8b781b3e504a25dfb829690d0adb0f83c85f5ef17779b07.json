{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tristan\\\\Desktop\\\\Programming Projects\\\\osams-ust\\\\client\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\n// LoginButton.js\nimport { GoogleLogin, GoogleOAuthProvider } from \"@react-oauth/google\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = \"1072140054426-iucuc7c784kr4bvat2nkv8mvd865005s.apps.googleusercontent.com\";\nfunction LoginButton({\n  setIsLoggedIn\n}) {\n  _s();\n  const navigate = useNavigate();\n  const onSuccess = res => {\n    console.log(\"Login Success: currentUser:\", res.profileObj);\n    var profile = res.getBasicProfile();\n    console.log(\"ID: \" + profile.getId()); // Don't send this directly to your server!\n    console.log(\"Full Name: \" + profile.getName());\n    console.log(\"Given Name: \" + profile.getGivenName());\n    console.log(\"Family Name: \" + profile.getFamilyName());\n    console.log(\"Image URL: \" + profile.getImageUrl());\n    console.log(\"Email: \" + profile.getEmail());\n    var id_token = res.getAuthResponse().id_token;\n    console.log(\"ID Token: \" + id_token);\n    navigate(\"/Dashboard\");\n  };\n  const onFailure = res => {\n    console.log(\"Login failed: res:\", res);\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: clientId,\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: clientId,\n      buttonText: \"Login\",\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      cookiePolicy: \"single_host_origin\",\n      isSignedIn: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginButton, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginButton;\nexport default LoginButton;\nvar _c;\n$RefreshReg$(_c, \"LoginButton\");","map":{"version":3,"names":["GoogleLogin","GoogleOAuthProvider","useNavigate","jsxDEV","_jsxDEV","clientId","LoginButton","setIsLoggedIn","_s","navigate","onSuccess","res","console","log","profileObj","profile","getBasicProfile","getId","getName","getGivenName","getFamilyName","getImageUrl","getEmail","id_token","getAuthResponse","onFailure","children","buttonText","cookiePolicy","isSignedIn","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tristan/Desktop/Programming Projects/osams-ust/client/src/components/login.js"],"sourcesContent":["// LoginButton.js\r\nimport { GoogleLogin, GoogleOAuthProvider } from \"@react-oauth/google\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst clientId =\r\n  \"1072140054426-iucuc7c784kr4bvat2nkv8mvd865005s.apps.googleusercontent.com\";\r\n\r\nfunction LoginButton({ setIsLoggedIn }) {\r\n  const navigate = useNavigate();\r\n\r\n  const onSuccess = (res) => {\r\n    console.log(\"Login Success: currentUser:\", res.profileObj);\r\n    var profile = res.getBasicProfile();\r\n    console.log(\"ID: \" + profile.getId()); // Don't send this directly to your server!\r\n    console.log(\"Full Name: \" + profile.getName());\r\n    console.log(\"Given Name: \" + profile.getGivenName());\r\n    console.log(\"Family Name: \" + profile.getFamilyName());\r\n    console.log(\"Image URL: \" + profile.getImageUrl());\r\n    console.log(\"Email: \" + profile.getEmail());\r\n\r\n    var id_token = res.getAuthResponse().id_token;\r\n    console.log(\"ID Token: \" + id_token);\r\n\r\n    navigate(\"/Dashboard\");\r\n  };\r\n\r\n  const onFailure = (res) => {\r\n    console.log(\"Login failed: res:\", res);\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <GoogleOAuthProvider clientId={clientId}>\r\n      <GoogleLogin\r\n        clientId={clientId}\r\n        buttonText=\"Login\"\r\n        onSuccess={onSuccess}\r\n        onFailure={onFailure}\r\n        cookiePolicy={\"single_host_origin\"}\r\n        isSignedIn={false}\r\n      />\r\n    </GoogleOAuthProvider>\r\n  );\r\n}\r\n\r\nexport default LoginButton;\r\n"],"mappings":";;AAAA;AACA,SAASA,WAAW,EAAEC,mBAAmB,QAAQ,qBAAqB;AAEtE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GACZ,2EAA2E;AAE7E,SAASC,WAAWA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,SAAS,GAAIC,GAAG,IAAK;IACzBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,GAAG,CAACG,UAAU,CAAC;IAC1D,IAAIC,OAAO,GAAGJ,GAAG,CAACK,eAAe,CAAC,CAAC;IACnCJ,OAAO,CAACC,GAAG,CAAC,MAAM,GAAGE,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACvCL,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGE,OAAO,CAACG,OAAO,CAAC,CAAC,CAAC;IAC9CN,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGE,OAAO,CAACI,YAAY,CAAC,CAAC,CAAC;IACpDP,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGE,OAAO,CAACK,aAAa,CAAC,CAAC,CAAC;IACtDR,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGE,OAAO,CAACM,WAAW,CAAC,CAAC,CAAC;IAClDT,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGE,OAAO,CAACO,QAAQ,CAAC,CAAC,CAAC;IAE3C,IAAIC,QAAQ,GAAGZ,GAAG,CAACa,eAAe,CAAC,CAAC,CAACD,QAAQ;IAC7CX,OAAO,CAACC,GAAG,CAAC,YAAY,GAAGU,QAAQ,CAAC;IAEpCd,QAAQ,CAAC,YAAY,CAAC;EACxB,CAAC;EAED,MAAMgB,SAAS,GAAId,GAAG,IAAK;IACzBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,GAAG,CAAC;IACtCJ,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEH,OAAA,CAACH,mBAAmB;IAACI,QAAQ,EAAEA,QAAS;IAAAqB,QAAA,eACtCtB,OAAA,CAACJ,WAAW;MACVK,QAAQ,EAAEA,QAAS;MACnBsB,UAAU,EAAC,OAAO;MAClBjB,SAAS,EAAEA,SAAU;MACrBe,SAAS,EAAEA,SAAU;MACrBG,YAAY,EAAE,oBAAqB;MACnCC,UAAU,EAAE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAE1B;AAACzB,EAAA,CApCQF,WAAW;EAAA,QACDJ,WAAW;AAAA;AAAAgC,EAAA,GADrB5B,WAAW;AAsCpB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}